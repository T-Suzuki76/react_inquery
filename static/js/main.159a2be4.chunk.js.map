{"version":3,"sources":["firebase/firebase.tsx","auth/UserAuthProvider.tsx","auth/AdminFlagProvider.tsx","auth/SignIn.tsx","auth/SignUp.tsx","components/home/FilterInquery.tsx","components/home/InqueryDetail.tsx","components/home/AllInquery.tsx","components/util/Confirm.tsx","components/util/Header.tsx","components/home/Info.tsx","components/home/InqueryForm.tsx","components/util/Loading.tsx","components/home/UserInquery.tsx","components/home/NewInquery.tsx","components/home/ConfigButton.tsx","pages/HomePage.tsx","components/chat/ChatDetail.tsx","components/chat/ChatInput.tsx","components/chat/Evaluation.tsx","components/chat/ChatOutput.tsx","pages/ChatPage.tsx","components/adminConfig/UserList.tsx","components/adminConfig/ManageItems.tsx","components/adminConfig/ConfigList.tsx","components/adminConfig/ConfigTab.tsx","components/adminConfig/InqueryInfo.tsx","pages/AdminConfigPage.tsx","Router/AppRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","UserAuthContext","createContext","currentUser","UserAuthProvider","props","children","useState","undefined","setCurrentUser","useEffect","onAuthStateChanged","user","Provider","value","AdminFlagContext","isAdmin","AdminFlagProvider","setIsAdmin","useContext","a","docRef","doc","uid","getDoc","docSnap","exists","data","admin","console","log","getAdminStatus","theme","createTheme","SignIn","email","setEmail","password","setPassword","history","useHistory","checkAuth","q","query","collection","where","getDocs","querySnapshot","ary","forEach","push","id","array","Array","from","some","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","noValidate","mt","onSubmit","e","preventDefault","signInWithEmailAndPassword","then","catch","error","errorCode","code","errorMessage","message","alert","TextField","margin","required","fullWidth","label","name","onChange","target","autoComplete","autoFocus","type","Button","mb","justifyContent","Link","RouterLink","to","SignUp","setName","createUserWithEmailAndPassword","useCredential","setDoc","updateProfile","displayName","Grid","container","spacing","item","xs","FilterButton","memo","setInqueries","response","staff","anchorEl","setAnchorEl","open","Boolean","handleClose","currentTarget","innerText","length","fetchInquery","f","i","limit","tel","products","title","inquery","timestamp","month","inqueryId","ml","IconButton","onClick","event","Menu","onClose","MenuListProps","map","res","key","MenuItem","InqueryDetail","setOpen","CustomIcon","styled","CloseIcon","marginRight","marginLeft","size","Backdrop","color","zIndex","drawer","padding","fontSize","borderBottom","toDate","toLocaleString","textAlign","disabled","pathname","state","AllInquery","inqueries","setUnmounted","setStaff","handleChange","v","updateDoc","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","index","overflow","textOverflow","letter","substr","toLocaleDateString","ToggleButtonGroup","exclusive","ToggleButton","Confirm","func","Dialog","DialogTitle","style","cursor","DialogActions","Header","flexGrow","AppBar","position","Toolbar","signOut","Info","outstanding","setOutstanding","processing","setProcessing","closed","setClosed","filter","Card","minWidth","mr","CardContent","pb","InqueryForm","setLoading","setProducts","select","setSelect","setUid","setTel","setTitle","setInquery","unmounted","sendInquery","addDoc","serverTimestamp","Date","getMonth","productsRef","orderBy","endIcon","inputProps","maxLength","pattern","helperText","InputLabel","Select","labelId","product","multiline","minRows","Loading","CircularProgress","UserInquery","loading","changePage","onSnapshot","NewInquery","time","badge","setBadge","fetchAll","resAry","seconds","height","Badge","badgeContent","ConfigButton","HomePage","setResponse","setTime","timeAry","pt","CustomizedAccordion","Accordion","ChatDetail","detail","date","toLocaleTimeString","width","backgroundColor","AccordionSummary","expandIcon","AccordionDetails","ChatInput","setMessage","sendMessage","bottom","boxShadow","Evaluation","ChatOutput","chat","setChat","inqueryRef","serverTimestamps","whiteSpace","String","ChatPage","location","useLocation","UserList","users","listName","fetchUsers","setUsers","setNotification","changeAdmin","List","border","ListSubheader","ListItem","ListItemButton","ManageItems","list","inputE1","useRef","notification","searchUser","current","addProduct","boolAry","path","includes","deleteDoc","setTimeout","p","inputRef","Fade","in","ConfigList","ConfigTab","setValue","Tabs","orientation","newValue","Tab","InqueryInfo","now","useReducer","countState","action","Number","dispatch","inputMode","AdminConfigPage","userAry","staffAry","fetchProducts","AppRouter","setInqueryId","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.159a2be4.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getFirestore } from \"firebase/firestore\"\r\nimport { getAuth } from \"firebase/auth\"\r\n\r\nconst firebaseConfig ={\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app)\r\nexport const auth = getAuth(app)","import { createContext, useEffect, useState } from \"react\";\r\nimport { User } from \"@firebase/auth\";\r\nimport { auth} from \"../firebase/firebase\";\r\n\r\ntype currentUserType = {\r\n    currentUser: User | null | undefined;\r\n}\r\n\r\nexport const UserAuthContext = createContext<currentUserType>({currentUser: null});\r\n\r\nexport const UserAuthProvider = (props:any) => {\r\n    const {children} = props;    \r\n    const [currentUser, setCurrentUser] = useState<User|null|undefined>(undefined)\r\n\r\n    useEffect(()=>{\r\n        let isMounted = true\r\n        auth.onAuthStateChanged((user) =>{\r\n            setCurrentUser(user)\r\n        })\r\n        return (()=>{\r\n            isMounted = false\r\n        })\r\n    },[])\r\n\r\n    return(\r\n        <UserAuthContext.Provider value={{currentUser:currentUser}}>\r\n            {children}\r\n        </UserAuthContext.Provider>\r\n    )\r\n}","import { doc, getDoc } from \"@firebase/firestore\";\r\nimport { createContext, useContext, useState } from \"react\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport { UserAuthContext } from \"./UserAuthProvider\";\r\n\r\ntype adminFlagType = {\r\n    isAdmin: boolean|undefined;\r\n}\r\nexport const AdminFlagContext = createContext<adminFlagType>({isAdmin:undefined})\r\n\r\nexport const AdminFlagProvider = (props:any) => {\r\n\r\n    const {children} = props;\r\n    const [isAdmin, setIsAdmin] = useState<boolean|undefined>(undefined)\r\n    const {currentUser} = useContext(UserAuthContext)\r\n    \r\n    const getAdminStatus = async()=>{\r\n        const docRef = doc(db, \"users\", `${currentUser?.uid}`)\r\n        const docSnap = await getDoc(docRef)\r\n        if(docSnap.exists()){\r\n            setIsAdmin(docSnap.data().admin)\r\n        }else{\r\n            console.log(\"No such document!\")\r\n        }\r\n    }\r\n    if(currentUser !== null && currentUser !== undefined){\r\n        getAdminStatus()\r\n    }\r\n\r\n    return(\r\n        <AdminFlagContext.Provider value={{isAdmin}}>\r\n            {children}\r\n        </AdminFlagContext.Provider>\r\n    )\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import Copyright from \"../components/Copyright\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { FormEvent, useState } from 'react';\r\nimport { auth, db } from '../firebase/firebase';\r\nimport { signInWithEmailAndPassword } from '@firebase/auth';\r\nimport { useHistory } from 'react-router';\r\nimport { collection, getDocs, query, where } from '@firebase/firestore';\r\n\r\nconst theme = createTheme();\r\n\r\nconst SignIn =()=> {\r\n\r\n  const [email,setEmail] = useState(\"\")\r\n  const [password,setPassword] = useState(\"\")\r\n  const history = useHistory()\r\n  \r\n  const checkAuth = async() =>{\r\n    const q = query(collection(db,\"users\"), where(\"admin\", \"==\", true))\r\n    const querySnapshot = await getDocs(q);\r\n    const ary:string[] = []\r\n    querySnapshot.forEach((doc)=>{\r\n      ary.push(doc.id)\r\n    })\r\n    const array = Array.from(ary)\r\n    const check = array.some((id)=>auth.currentUser?.uid === id)\r\n    \r\n    if(check){\r\n      history.push(`/admin/${auth.currentUser?.uid}`)\r\n    }else{\r\n      history.push(`/home/${auth.currentUser?.uid}`)\r\n    }\r\n  }\r\n\r\n  const signin = (e:FormEvent) => {\r\n    e.preventDefault()\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(() =>{\r\n          checkAuth()\r\n      })\r\n      .catch((error) =>{\r\n          const errorCode = error.code\r\n          const errorMessage = error.message\r\n          alert(`${errorCode}:${errorMessage}`)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box \r\n          sx={{\r\n            marginTop:8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        }}>\r\n            <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              サインイン\r\n            </Typography>\r\n            <Box\r\n              component=\"form\" \r\n              noValidate \r\n              sx={{mt:1}}\r\n              onSubmit={signin}\r\n            >\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"メールアドレス\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={e=>setEmail(e.target.value)}\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"パスワード\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={e=>setPassword(e.target.value)}\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{mt:3,mb:2}}\r\n                // onClick={signin}\r\n              >\r\n                サインイン\r\n              </Button>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                  <Link component={RouterLink} to=\"/signup\" variant=\"body2\">\r\n                  {\"サインアップする\"}\r\n                  </Link>\r\n              </Box>\r\n            </Box>\r\n        </Box>\r\n        {/* <Box mt={8}>\r\n          <Copyright/>\r\n        </Box> */}\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SignIn","import Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import Copyright from '../components/Copyright';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { createUserWithEmailAndPassword, updateProfile } from '@firebase/auth';\r\nimport { auth, db } from '../firebase/firebase';\r\nimport { FormEvent, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { doc, setDoc } from '@firebase/firestore';\r\n\r\nconst theme = createTheme();\r\n\r\nconst SignUp = () => {\r\n  \r\n  const [name,setName] = useState(\"\")\r\n  const [email,setEmail] = useState(\"\")\r\n  const [password,setPassword] = useState(\"\")\r\n  const history = useHistory()\r\n  const admin:boolean = false\r\n\r\n  const signup = (e:FormEvent) => {\r\n    e.preventDefault()\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then(async(useCredential) =>{\r\n          const user = useCredential.user\r\n          await setDoc(doc(db, \"users\", user.uid),{\r\n            uid: user.uid,\r\n            name: name,\r\n            email: email,\r\n            admin: admin,\r\n          })\r\n          updateProfile(user,{displayName:name})\r\n          history.push(`/home/${useCredential.user.uid}`)  \r\n      })\r\n      .catch((error) =>{\r\n        const errorCode = error.code\r\n        const errorMessage = error.message\r\n        alert(`${errorCode}:${errorMessage}`)\r\n      })\r\n  }\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop:8,\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center'\r\n          }}\r\n        >\r\n        <Avatar sx={{m:1,bgcolor:'secondary.main'}}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              サインアップ\r\n            </Typography>\r\n            <Box \r\n              component=\"form\" \r\n              noValidate\r\n              sx={{mt:3}}\r\n              onSubmit={signup}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"ユーザー名\"\r\n                    autoFocus\r\n                    value={name}\r\n                    onChange={e=>setName(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"メールアドレス\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    value={email}\r\n                    onChange={e=>setEmail(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"パスワード\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    value={password}\r\n                    onChange={e=>setPassword(e.target.value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{mt:3,mb:2}}\r\n              >\r\n                サインアップ\r\n              </Button>\r\n              <Grid container justifyContent=\"flex-end\">\r\n                <Grid item>\r\n                  <Link component={RouterLink} to=\"/\" variant=\"body2\">\r\n                    すでにアカウントを持っている\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          {/* <Box mt={5}>\r\n            <Copyright />\r\n          </Box>     */}\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SignUp","import Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { IconButton } from '@mui/material';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport React, { memo, useState } from 'react';\r\nimport { Box } from '@mui/system';\r\nimport { collection, getDocs, limit, query, where } from '@firebase/firestore';\r\nimport { db } from '../../firebase/firebase';\r\nimport { InqueryType } from '../../types/type';\r\n\r\ntype PropsType = {\r\n    setInqueries: React.Dispatch<React.SetStateAction<InqueryType[] | undefined>>\r\n    response: string[]\r\n    staff: string[]\r\n}\r\n\r\nexport const FilterButton = memo((props:PropsType) => {\r\n    \r\n    const {setInqueries,response,staff} = props\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n    \r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = (e:React.MouseEvent<HTMLElement>) => {        \r\n        if(e.currentTarget.innerText!==\"\"){\r\n            if(response.length===0){\r\n                fetchInquery(\"staff\",e.currentTarget.innerText)\r\n            }else if(staff.length===0){\r\n                fetchInquery(\"response\",e.currentTarget.innerText)\r\n            }\r\n        }\r\n        setAnchorEl(null); \r\n    };\r\n\r\n    const fetchInquery = async(f:string,i:string)=>{\r\n        const ary:InqueryType[]=[]\r\n        const q= query(collection(db,\"inquery\"),where(f,\"==\", i),limit(20))\r\n        const querySnapshot = await getDocs(q)\r\n        querySnapshot.forEach((doc)=>{\r\n            ary.push({\r\n                name:doc.data().name,\r\n                email:doc.data().email,\r\n                tel:doc.data().tel,\r\n                products:doc.data().products,\r\n                title:doc.data().title,\r\n                inquery:doc.data().inquery,\r\n                uid:doc.data().uid,\r\n                timestamp:doc.data().timestamp,\r\n                month:doc.data().month,\r\n                response:doc.data().response,\r\n                inqueryId: doc.id,\r\n                staff:doc.data().staff\r\n            })\r\n        })\r\n        setInqueries(ary)\r\n    }\r\n\r\n    return (\r\n        <Box component=\"span\" ml={1}>\r\n            <IconButton\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}\r\n            >\r\n                <FilterListIcon/>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                {\r\n                    response.map((res,key)=>{\r\n                        return(\r\n                            <MenuItem key={key} onClick={handleClose}>{res}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    staff.map((staff,key)=>{\r\n                        return(\r\n                            <MenuItem key={key} onClick={handleClose}>{staff}</MenuItem>\r\n                            )\r\n                        })\r\n                }\r\n            </Menu>\r\n        </Box>\r\n    );\r\n})","import { Backdrop, Box, Button, Container, Grid, styled, Typography } from \"@mui/material\"\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { InqueryType } from \"../../types/type\";\r\n\r\n\r\nexport const InqueryDetail = (props:InqueryType) => {\r\n    const [open, setOpen] = useState(false);\r\n    const history = useHistory()\r\n    const {name,email,tel,products,title,inquery,uid,timestamp,response,inqueryId,staff} = props\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const CustomIcon = styled(CloseIcon)({\r\n        display: \"block\",\r\n        marginRight: 0,\r\n        marginLeft:\"auto\"\r\n    })\r\n\r\n    const onClickChangeHistory =(id:string) =>{\r\n        history.push({\r\n            pathname:`/inquery/${id}`,\r\n            state: id\r\n        })\r\n    }\r\n    return(\r\n        <>\r\n        <Button variant=\"outlined\" size=\"medium\" sx={{margin:3}} onClick={handleToggle}>詳細</Button>\r\n        <Backdrop \r\n            sx={{color:\"#fff\",\r\n                zIndex:(theme)=> theme.zIndex.drawer + 1}\r\n            }\r\n            open={open}\r\n        >\r\n            <Container maxWidth=\"md\">\r\n                <Box \r\n                    sx={{\r\n                        bgcolor:\"white\",\r\n                        zIndex:100,\r\n                        padding:2,\r\n                    }}\r\n                >\r\n                    <Grid container justifyContent=\"end\">\r\n                        <Grid item xs={9}>\r\n                            <Typography fontSize={25} color=\"gray\">お問い合わせ詳細</Typography>  \r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <CustomIcon \r\n                                color=\"action\" \r\n                                onClick={handleClose}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Container>\r\n                        <Box m={2}>\r\n                            <Typography \r\n                                color=\"primary\"\r\n                                mb={1}\r\n                                sx={{\r\n                                    borderBottom:\"1px dashed #1976d2\"\r\n                                }}\r\n                            >\r\n                                お問い合わせ情報\r\n                            </Typography>\r\n                            <Box m={2}>\r\n                                <Grid mb={1} container>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography color=\"GrayText\">件名</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography color=\"GrayText\">{title}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid mb={1} container>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography color=\"GrayText\">お問い合わせ詳細</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography color=\"GrayText\">{inquery}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid mb={1} container>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography color=\"GrayText\">製品種別</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography color=\"GrayText\">{products}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid mb={1} container>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography color=\"GrayText\">お問い合わせ受信日時</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography color=\"GrayText\">{timestamp.toDate().toLocaleString()}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid mb={1} container>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography color=\"GrayText\">対応状況</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography color=\"GrayText\">\r\n                                            {response}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid mb={1} container>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography color=\"GrayText\">対応スタッフ</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography color=\"GrayText\">{staff}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box ml={2}>\r\n                            <Typography\r\n                                color=\"primary\"\r\n                                mb={1}\r\n                                sx={{\r\n                                    borderBottom:\"1px dashed #1976d2\"\r\n                                }}\r\n                            >\r\n                                お客様情報\r\n                            </Typography>\r\n                            <Box ml={2}>\r\n                                <Grid mb={1} container>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography color=\"GrayText\">お客様氏名</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography color=\"GrayText\">{name}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid mb={1} container>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography color=\"GrayText\">お客様ID</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography color=\"GrayText\">{uid}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid mb={1} container>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography color=\"GrayText\">電話番号</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography color=\"GrayText\">{tel}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid mb={1} container>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography color=\"GrayText\">メールアドレス</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography color=\"GrayText\">{email}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </Box>\r\n                    </Container>\r\n                    <Box sx={{mt:3,mb:1}} textAlign=\"center\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            {...response===\"未対応\"?\r\n                                {disabled:true}\r\n                                :\r\n                                {disabled:false}\r\n                            }\r\n                            onClick={()=>onClickChangeHistory(inqueryId)}\r\n                        >\r\n                            チャットページに移動\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        </Backdrop>\r\n    </>\r\n    )\r\n}","import { collection, doc, getDocs, query, updateDoc, where } from \"@firebase/firestore\"\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, ToggleButton, ToggleButtonGroup, Typography } from \"@mui/material\"\r\nimport { memo, useContext, useEffect, useState } from \"react\"\r\nimport { UserAuthContext } from \"../../auth/UserAuthProvider\"\r\nimport { db } from \"../../firebase/firebase\"\r\nimport { InqueryType } from \"../../types/type\"\r\nimport { FilterButton } from \"./FilterInquery\"\r\nimport { InqueryDetail } from \"./InqueryDetail\"\r\n\r\ntype PropsType = {\r\n    inqueries: InqueryType[] | undefined\r\n    setInqueries:React.Dispatch<React.SetStateAction<InqueryType[] | undefined>>\r\n    setUnmounted:React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport const AllInquery = memo((props:PropsType)=> {\r\n    const { inqueries,setInqueries,setUnmounted}= props\r\n    const [staff,setStaff] = useState<string[]>([])\r\n    const {currentUser} = useContext(UserAuthContext)\r\n\r\n    const handleChange = async(id:string, v:string) => {\r\n        const docRef = doc(db, \"inquery\", id)\r\n        if(v===\"未対応\"){\r\n            await updateDoc(docRef,{\r\n                response: v,\r\n                staff: \"未定\"\r\n            })\r\n        }else{\r\n            await updateDoc(docRef,{\r\n                response: v,\r\n                staff: currentUser?.displayName\r\n            })\r\n\r\n        }\r\n        setUnmounted(false)\r\n    };\r\n\r\n    const omittedLetter =(letter:string) =>{\r\n        const maxLenght = 100\r\n        if(letter.length > maxLenght){\r\n            return letter.substr(0,maxLenght) + \"...\"\r\n        }\r\n        return letter\r\n    }\r\n\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            const ary:string[]=[]\r\n            const q= query(collection(db,\"users\"),where(\"admin\",\"==\", true))\r\n            const querySnapshot = await getDocs(q)\r\n            querySnapshot.forEach((doc)=>{\r\n                ary.push(doc.data().name)\r\n            })\r\n            setStaff(ary)\r\n        })()\r\n    },[inqueries])    \r\n\r\n    return(\r\n        <>\r\n                <TableContainer component={Paper} sx={{mb:2}}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell >件名</TableCell>\r\n                                <TableCell >氏名</TableCell>\r\n                                <TableCell >製品種別</TableCell>\r\n                                <TableCell >お問い合わせ内容</TableCell>\r\n                                <TableCell >日時</TableCell>\r\n                                <TableCell >\r\n                                    <Typography component=\"span\">担当</Typography>\r\n                                    <FilterButton \r\n                                        setInqueries={setInqueries}\r\n                                        staff={staff} \r\n                                        response={[]} \r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    <Typography component=\"span\">対応状況</Typography>\r\n                                    <FilterButton \r\n                                        setInqueries={setInqueries} \r\n                                        staff={[]} \r\n                                        response={[\"未対応\",\"対応中\",\"完了\"]} \r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell >詳細</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {inqueries!==undefined&&\r\n                                <>\r\n                                {\r\n                                    inqueries.map((item,index)=>{\r\n                                        return(\r\n                                            <TableRow key={index}>\r\n                                                <TableCell \r\n                                                    size=\"small\"\r\n                                                    sx={{\r\n                                                        maxWidth:\"150px\"\r\n                                                    }}\r\n                                                >\r\n                                                    {item.title}\r\n                                                </TableCell>\r\n                                                <TableCell size=\"small\">{item.name}</TableCell>\r\n                                                <TableCell size=\"small\">{item.products}</TableCell>\r\n                                                <TableCell size=\"small\">\r\n                                                    <Typography \r\n                                                        fontSize=\"small\"\r\n                                                        sx={{\r\n                                                            maxWidth:\"200px\",\r\n                                                            overflow:\"hidden\",\r\n                                                            textOverflow:\"ellipsis\"\r\n                                                        }}\r\n                                                    >\r\n                                                        {omittedLetter(item.inquery)}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell size=\"small\">{item.timestamp.toDate().toLocaleDateString()}</TableCell>\r\n                                                <TableCell size=\"small\">{item.staff}</TableCell>\r\n                                                <TableCell size=\"small\">\r\n                                                        <ToggleButtonGroup\r\n                                                            color=\"primary\"\r\n                                                            value={item.response}\r\n                                                            exclusive\r\n                                                            size=\"small\"\r\n                                                        >\r\n                                                            <ToggleButton\r\n                                                                value=\"未対応\"\r\n                                                                onClick={()=>handleChange(item.inqueryId, \"未対応\")}\r\n                                                                {...item.staff !== currentUser?.displayName&& {disabled:true}}\r\n                                                                {...item.response===\"未対応\"&& {disabled:false}}\r\n                                                            >\r\n                                                                未対応\r\n                                                            </ToggleButton>\r\n                                                            <ToggleButton\r\n                                                                value=\"対応中\"\r\n                                                                onClick={()=>handleChange(item.inqueryId, \"対応中\")}\r\n                                                                {...item.staff !== currentUser?.displayName&& {disabled:true}}\r\n                                                                {...item.response===\"未対応\"&& {disabled:false}}\r\n                                                            >\r\n                                                                対応中\r\n                                                            </ToggleButton>\r\n                                                            <ToggleButton\r\n                                                                value=\"完了\"\r\n                                                                onClick={()=>handleChange(item.inqueryId, \"完了\")}\r\n                                                                {...item.staff !== currentUser?.displayName&& {disabled:true}}\r\n                                                                {...item.response===\"未対応\"&& {disabled:false}}\r\n                                                            >\r\n                                                                完了\r\n                                                            </ToggleButton>\r\n                                                        </ToggleButtonGroup>\r\n                                                </TableCell>\r\n                                                <TableCell \r\n                                                    size=\"small\"\r\n                                                    sx={{\r\n                                                        maxWidth:\"100px\"\r\n                                                    }}\r\n                                                >\r\n                                                    <InqueryDetail\r\n                                                        name={item.name}\r\n                                                        email={item.email}\r\n                                                        tel={item.tel}\r\n                                                        products={item.products}\r\n                                                        title={item.title}\r\n                                                        inquery={item.inquery}\r\n                                                        uid={item.uid}\r\n                                                        timestamp={item.timestamp}\r\n                                                        month={item.month}\r\n                                                        response={item.response}\r\n                                                        inqueryId={item.inqueryId}\r\n                                                        staff={item.staff}\r\n                                                    />\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </>\r\n                            }\r\n                            \r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <>\r\n                {inqueries!==undefined&&inqueries.length===0&&\r\n                    <Typography \r\n                        textAlign=\"center\" \r\n                        mt={2}\r\n                    >\r\n                        表示できるお問い合わせがありません。\r\n                    </Typography>\r\n                }\r\n                </>\r\n        </>\r\n    )\r\n})","import { Button, Dialog, DialogActions, DialogTitle } from \"@mui/material\"\r\n\r\ntype propsType = {\r\n    open:boolean\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n    title:string\r\n    func:()=>void\r\n}\r\nexport const Confirm = (props:propsType) => {\r\n    const {open,setOpen,title,func}= props\r\n\r\n    const onClickClose =()=>{\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n            >\r\n                <DialogTitle style={{cursor:\"move\"}}>\r\n                    {title}\r\n                </DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={onClickClose}>キャンセル</Button>\r\n                    <Button onClick={func}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n","import AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { auth } from '../../firebase/firebase';\r\nimport { signOut } from '@firebase/auth';\r\nimport { useHistory } from 'react-router';\r\nimport { useContext,useState } from 'react';\r\nimport { AdminFlagContext } from '../../auth/AdminFlagProvider';\r\nimport { Confirm } from './Confirm';\r\n\r\nexport const Header = () => {\r\n    const history = useHistory()\r\n    const {isAdmin} = useContext(AdminFlagContext)\r\n    const [open,setOpen] = useState(false)\r\n\r\n    const confirm =()=>{\r\n        setOpen(true)\r\n    }\r\n\r\n    const signout = () => {\r\n        signOut(auth).then(()=>{\r\n            history.push(\"/\")\r\n        }).catch((error)=>{\r\n            const errorCode = error.code\r\n            const errorMessage = error.message\r\n            alert(`${errorCode}:${errorMessage}`)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1, mb:\"64px\", }}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                        Osiris\r\n                        {isAdmin&&<Typography variant=\"subtitle2\" component=\"span\">　-管理者ページ-</Typography>}\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={confirm}>サインアウト</Button>\r\n                    <Confirm open={open} setOpen={setOpen} title=\"サインアウトしてよろしいですか？\" func={signout}/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    )\r\n}","import { Box, Card, CardContent, Typography } from \"@mui/material\"\r\nimport { memo, useEffect, useState } from \"react\"\r\n\r\ntype PropsType = {\r\n    response:string[]|undefined\r\n}\r\n\r\nexport const Info = memo((props:PropsType)=>{\r\n    const {response} = props\r\n    const [outstanding,setOutstanding] = useState<number>(0)\r\n    const [processing,setProcessing] = useState<number>(0)\r\n    const [closed,setClosed] = useState<number>(0)\r\n\r\n    useEffect(()=>{\r\n        (()=>{\r\n            if(response!==undefined){\r\n                setOutstanding(response.filter((i)=>i===\"未対応\").length)\r\n                setProcessing(response.filter((i)=>i===\"対応中\").length)\r\n                setClosed(response.filter((i)=>i===\"完了\").length)\r\n            }\r\n        })()\r\n    },[response])\r\n\r\n    return(\r\n            <Box \r\n                display=\"flex\" \r\n                justifyContent=\"left\"\r\n                mt={2} \r\n                mb={2}>\r\n                <Card\r\n                    sx={{\r\n                        minWidth:130,\r\n                        mr:1\r\n                    }}\r\n                >\r\n                    <CardContent \r\n                        sx={{\r\n                            display:\"flex\",\r\n                            alignItems:\"center\",\r\n                        }}\r\n                    >\r\n                        <Typography \r\n                            fontSize={15}\r\n                            color=\"GrayText\"\r\n                            sx={{mr:4,pb:0}}\r\n                        >\r\n                            未対応\r\n                        </Typography>\r\n                        <Typography\r\n                            fontSize={25}\r\n                            textAlign=\"center\"\r\n                            color=\"GrayText\"\r\n                        >\r\n                            {outstanding===undefined?0:outstanding}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card \r\n                    sx={{\r\n                        minWidth:130,\r\n                        mr:1\r\n                    }}\r\n                >\r\n                    <CardContent sx={{display:\"flex\",alignItems:\"center\"}}>\r\n                        <Typography\r\n                            color=\"GrayText\"\r\n                            fontSize={15}\r\n                            sx={{mr:4,pb:0}}\r\n                        >\r\n                            対応中\r\n                        </Typography>\r\n                        <Typography \r\n                            fontSize={25}\r\n                            textAlign=\"center\"\r\n                            color=\"GrayText\"\r\n                        >\r\n                            {processing===undefined?0:processing}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card \r\n                    sx={{\r\n                        minWidth:130,\r\n                    }}\r\n                >\r\n                    <CardContent sx={{display:\"flex\", alignItems:\"center\"}}>\r\n                        <Typography\r\n                            color=\"GrayText\"\r\n                            fontSize={15}\r\n                            sx={{mr:4,pb:0}}\r\n                        >\r\n                            完了\r\n                        </Typography>\r\n                        <Typography\r\n                            fontSize={23} \r\n                            textAlign=\"center\"\r\n                            color=\"GrayText\"\r\n                        >\r\n                            {closed===undefined?0:closed}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Box>\r\n    )\r\n})","import { addDoc, collection, getDocs, orderBy, query, serverTimestamp } from \"firebase/firestore\";\r\nimport { FormEvent, memo, useContext, useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Backdrop, Button, Container, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, TextField, Typography } from \"@mui/material\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {styled} from '@mui/material/styles'\r\nimport { UserAuthContext } from \"../../auth/UserAuthProvider\";\r\n\r\ntype PropsType = {\r\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport const InqueryForm = memo((props:PropsType) =>{\r\n    const {setLoading} = props\r\n    const [products,setProducts] = useState<string[]>([])\r\n    const [select, setSelect] = useState(\"\")\r\n    const [name,setName] = useState<string|null|undefined>(\"\")\r\n    const [email, setEmail] = useState<string|null|undefined>(\"\")\r\n    const [uid, setUid] = useState<string|null|undefined>(\"\")\r\n    const [tel, setTel] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\")\r\n    const [inquery, setInquery] = useState(\"\")\r\n    const [open, setOpen] = useState(false);\r\n    const [unmounted, setUnmounted] = useState(false)\r\n    \r\n    const {currentUser} = useContext(UserAuthContext)\r\n\r\n    const CustomIcon = styled(CloseIcon)({\r\n        display: \"block\",\r\n        marginRight: 0,\r\n        marginLeft:\"auto\"\r\n    })\r\n\r\n    const sendInquery =async(e:FormEvent)=>{\r\n        setLoading(true)\r\n        e.preventDefault()\r\n        await addDoc(collection(db, \"inquery\"),{\r\n            name:   name,\r\n            email:  email,\r\n            tel:    tel,\r\n            products: select,\r\n            title:title,\r\n            inquery: inquery,\r\n            uid:    uid,\r\n            timestamp: serverTimestamp(),\r\n            month: (new Date()).getMonth()+1,\r\n            response: \"未対応\",\r\n            staff:\"未定\"\r\n        })\r\n        setOpen(false);\r\n        setLoading(false)\r\n    }\r\n\r\n    const handleChange = (event: SelectChangeEvent<string>) => {\r\n        setSelect(event.target.value)\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        if(currentUser!==null&&currentUser!==undefined){\r\n            setName(currentUser.displayName)\r\n            setEmail(currentUser.email)\r\n            setUid(currentUser.uid)\r\n        }\r\n    },[currentUser,setLoading])\r\n    \r\n    useEffect(()=>{\r\n        (async()=>{\r\n            const productsRef = collection(db, \"products\")\r\n            const q = query(productsRef, orderBy(\"name\"))\r\n            const querySnapshot = await getDocs(q)\r\n            const array:string[] = []\r\n            querySnapshot.forEach((doc) => {\r\n                array.push(doc.data().name)\r\n            });\r\n            setProducts(array)\r\n        })()\r\n        return () => { setUnmounted(true) }\r\n    },[currentUser,unmounted])\r\n    \r\n    useEffect(()=>{\r\n        if(products!==undefined){\r\n            setLoading(false)\r\n        }\r\n    },[products,setLoading])\r\n\r\n    return(\r\n        <>\r\n            <Button variant=\"contained\" size=\"large\" sx={{margin:3}} endIcon={<SendIcon/>} onClick={handleToggle}>お問い合わせを追加する</Button>\r\n            <Backdrop \r\n                sx={{color:\"#fff\",\r\n                    zIndex:(theme)=> theme.zIndex.drawer + 1}\r\n                }\r\n                open={open}\r\n            >\r\n                <Container maxWidth=\"md\">\r\n                    <Box \r\n                        component=\"form\"\r\n                        onSubmit={sendInquery} \r\n\r\n                        sx={{\r\n                            bgcolor:\"white\",\r\n                            zIndex:100,\r\n                            padding:2,\r\n                        }}\r\n                    >\r\n                        <Grid container justifyContent=\"end\">\r\n                            <Grid item xs={11}>\r\n                                <Typography color=\"gray\">お問い合わせフォーム</Typography>  \r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                                <CustomIcon \r\n                                    color=\"action\" \r\n                                    onClick={handleClose}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <TextField \r\n                            label=\"氏名\"\r\n                            type=\"text\"\r\n                            inputProps={{maxLength:16}}\r\n                            variant=\"outlined\" \r\n                            value={name}   \r\n                            size=\"small\"   \r\n                            required \r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                        />\r\n                        <TextField \r\n                            label=\"メールアドレス\"\r\n                            type=\"email\"\r\n                            inputProps={{maxLength:200}}\r\n                            variant=\"outlined\" \r\n                            value={email}\r\n                            size=\"small\"\r\n                            required \r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                        />\r\n                        <TextField \r\n                            label=\"電話番号\"\r\n                            type=\"tel\"\r\n                            size=\"small\"  \r\n                            variant=\"outlined\" \r\n                            inputProps={\r\n                                {maxLength:13, \r\n                                pattern:\"[0-9]{3}-[0-9]{4}-[0-9]{4}\"}\r\n                            }\r\n                            helperText=\"ハイフンを入れて入力してください。\"\r\n                            required \r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            onChange={e=>setTel(e.target.value)}\r\n                        />\r\n                        <InputLabel id=\"select\" sx={{mt:1}}>製品種別</InputLabel>\r\n                        <Select \r\n                            labelId=\"select\" \r\n                            value={select}\r\n                            onChange={handleChange}\r\n                            size=\"small\"   \r\n                            fullWidth \r\n                            required \r\n                            sx={{mb:1}} \r\n                        >\r\n                            <MenuItem \r\n                                disabled \r\n                                value=\"製品を選択してください\"\r\n                            >\r\n                                製品を選択してください\r\n                            </MenuItem>\r\n                            {products?.map((product,index)=>{\r\n                                return(\r\n                                    <MenuItem\r\n                                        key={index}\r\n                                        value={product}\r\n                                    >\r\n                                        {product}\r\n                                    </MenuItem>                    \r\n                                )\r\n                            })}\r\n                        </Select>\r\n                        <TextField \r\n                            label=\"件名\"\r\n                            type=\"text\" \r\n                            inputProps={{maxLength:100}}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            fullWidth\r\n                            required\r\n                            margin=\"normal\"\r\n                            onChange={e=>setTitle(e.target.value)}\r\n                        />\r\n                        <TextField \r\n                            label=\"お問い合わせ内容\"\r\n                            type=\"text\" \r\n                            inputProps={{maxLength:2000}}\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            minRows={3}\r\n                            fullWidth\r\n                            required\r\n                            margin=\"dense\"\r\n                            onChange={e=>setInquery(e.target.value)}\r\n                        />\r\n                        <Box sx={{mt:2,mb:1}}>\r\n                            <Button \r\n                                variant=\"contained\" \r\n                                type=\"submit\" \r\n                                fullWidth\r\n                            >\r\n                                送信する\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Container>\r\n            </Backdrop>\r\n\r\n        </>\r\n    )\r\n})","import CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport const Loading =() =>{\r\n  return (\r\n    <Box sx={{ display: 'flex', justifyContent:\"center\"}}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n}","import { collection, onSnapshot, query, where } from \"@firebase/firestore\"\r\nimport { Button, Card, CardContent, Container,  Typography } from \"@mui/material\"\r\nimport { memo, useContext, useEffect, useState } from \"react\"\r\nimport { UserAuthContext } from \"../../auth/UserAuthProvider\"\r\nimport { db } from \"../../firebase/firebase\"\r\nimport { Loading } from \"../util/Loading\"\r\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\r\nimport { useHistory } from \"react-router\"\r\nimport { InqueryType } from \"../../types/type\"\r\n\r\nexport const UserInquery = memo(() => {\r\n    const{currentUser} = useContext(UserAuthContext)\r\n    const [inquery,setInquery] = useState<InqueryType[]>()\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const history = useHistory()\r\n\r\n    const changePage = (id:string) =>{\r\n        history.push({\r\n            pathname:`/inquery/${id}`,\r\n            state: id\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setLoading(true)\r\n            const ary:InqueryType[]=[]\r\n            if(currentUser!==null&&currentUser!==undefined){\r\n                const q = query(collection(db,\"inquery\"),where(\"uid\", \"==\", currentUser.uid))\r\n                // const querySnapshot = await getDocs(q)\r\n                onSnapshot(q,(querySnapshot)=>{\r\n                    querySnapshot.forEach((doc)=>{\r\n                        ary.push({\r\n                            name: doc.data().name,\r\n                            email: doc.data().email,\r\n                            tel: doc.data().tel,\r\n                            products: doc.data().products,\r\n                            title: doc.data().title,\r\n                            inquery: doc.data().inquery,\r\n                            uid: doc.data().uid,\r\n                            timestamp: doc.data().timestamp,\r\n                            month:doc.data().month,\r\n                            response: doc.data().response,\r\n                            inqueryId: doc.id,\r\n                            staff:doc.data().staff\r\n                        })\r\n                    })\r\n                    setInquery(ary)\r\n                })\r\n                setLoading(false)\r\n            }\r\n        })()\r\n    },[])\r\n\r\n    return(\r\n        <Container>\r\n            {loading?\r\n                <Loading/> \r\n                :\r\n                <>\r\n                    {inquery===undefined?\r\n                        <>\r\n                            <Typography>表示可能なお問い合わせはありません</Typography>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            {inquery?.map((item,index)=>{\r\n                                    return(\r\n                                        <Card sx={{minWidth:275,mb:2}} key={index}>\r\n                                            <CardContent>\r\n                                                <Typography color=\"GrayText\" fontSize=\"14px\">件名：</Typography>\r\n                                                <Typography sx={{mb:1}}>{item.title}</Typography>\r\n                                                <Typography color=\"GrayText\" fontSize=\"14px\">お問い合わせ内容：</Typography>\r\n                                                <Typography>{item.inquery}</Typography>\r\n                                                <Typography \r\n                                                    color=\"GrayText\" \r\n                                                    fontSize=\"14px\"\r\n                                                    sx={{mt:2}}\r\n                                                >\r\n                                                    担当:{item.staff}\r\n                                                </Typography>\r\n                                                {/* {item.response===\"outstanding\"? */}\r\n                                                {item.response===\"未対応\"?\r\n                                                <Button \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth \r\n                                                    sx={{mt:2}}\r\n                                                    endIcon={<EmailOutlinedIcon/>}\r\n                                                    onClick={()=>changePage(item.inqueryId)}\r\n                                                    disabled\r\n                                                >\r\n                                                    担当者の返信をお待ちください\r\n                                                </Button>\r\n                                                :\r\n                                                <Button \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth \r\n                                                    sx={{mt:2}}\r\n                                                    endIcon={<EmailOutlinedIcon/>}\r\n                                                    onClick={()=>changePage(item.inqueryId)}\r\n                                                >\r\n                                                    返信を見る\r\n                                                </Button>\r\n                                                }\r\n                                                \r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </>\r\n                    }\r\n                    \r\n                </>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { Badge, Button, Typography } from \"@mui/material\"\r\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\r\nimport { onSnapshot, query, Timestamp, where } from \"@firebase/firestore\";\r\nimport { InqueryType } from \"../../types/type\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ntype PropsType = {\r\n    time: Timestamp | undefined\r\n    setInqueries: React.Dispatch<React.SetStateAction<InqueryType[] | undefined>>\r\n}\r\n\r\nexport const NewInquery = (props:PropsType) => {\r\n    const {time,setInqueries} = props\r\n    const [badge,setBadge] = useState<number>()\r\n\r\n    const fetchAll = async()=>{\r\n        const ary:InqueryType[]=[]\r\n        const resAry:string[] = []\r\n            const q = query(collection(db,\"inquery\"),where(\"response\",\"==\",\"未対応\"))\r\n            const querySnapshot = await getDocs(q)\r\n            querySnapshot.forEach(doc=>{\r\n                ary.push({\r\n                    name:doc.data().name,\r\n                    email:doc.data().email,\r\n                    tel:doc.data().tel,\r\n                    products:doc.data().products,\r\n                    title:doc.data().title,\r\n                    inquery:doc.data().inquery,\r\n                    uid:doc.data().uid,\r\n                    timestamp:doc.data().timestamp,\r\n                    month:doc.data().month,\r\n                    response:doc.data().response,\r\n                    inqueryId: doc.id,\r\n                    staff:doc.data().staff\r\n                })\r\n                resAry.push(doc.data().response)\r\n\r\n            })\r\n            setInqueries(ary)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            const ary:string[] = []\r\n            const q = query(collection(db,\"inquery\"),where(\"response\", \"==\", \"未対応\"))\r\n            onSnapshot(q,(querySnapshot)=>{\r\n                querySnapshot.forEach((doc)=>{\r\n                    if(time!==undefined){\r\n                        if(doc.data().timestamp.seconds > time.seconds){\r\n                            ary.push(doc.data().response)\r\n                        }\r\n                    }\r\n                })\r\n                setBadge(ary.length)\r\n            })\r\n        })()\r\n    },[time])\r\n\r\n    return(\r\n        <Button \r\n            variant=\"outlined\" \r\n            size=\"medium\"\r\n            sx={{\r\n                ml:2,\r\n                mr:2,\r\n                height:\"60px\",\r\n            }}\r\n            onClick={fetchAll}\r\n            {...badge===0&&{disabled:true}}\r\n        >\r\n            {badge===0?\r\n                <Typography>新着のお問い合わせはありません</Typography>\r\n                :\r\n                <Typography>新着のお問い合わせを取得する</Typography>\r\n            }\r\n            <Badge badgeContent={badge} color=\"primary\">\r\n                <InfoOutlined/>\r\n            </Badge>\r\n        </Button>\r\n    )\r\n}","import SettingsIcon from '@mui/icons-material/Settings';\r\nimport { IconButton } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ConfigButton =()=>{\r\n\r\n    return(\r\n        <Link to=\"/admin/WnXXiSFjlSgexnUOrXinoa3Cr052/config\">\r\n        <IconButton\r\n            size=\"large\"\r\n            sx={{m:\"0 0 0 auto\"}}\r\n        >\r\n            <SettingsIcon />\r\n        </IconButton>\r\n        </Link>\r\n    )\r\n}","import { Box } from \"@mui/system\"\r\nimport { memo, useContext, useEffect, useState } from \"react\"\r\nimport { AdminFlagContext } from \"../auth/AdminFlagProvider\"\r\nimport { AllInquery } from \"../components/home/AllInquery\"\r\nimport { Header } from \"../components/util/Header\"\r\nimport { Info } from \"../components/home/Info\"\r\nimport { InqueryForm } from \"../components/home/InqueryForm\"\r\nimport { Loading } from \"../components/util/Loading\"\r\nimport { UserInquery } from \"../components/home/UserInquery\"\r\nimport { InqueryType } from \"../types/type\"\r\nimport { collection, getDocs, limit, orderBy, Timestamp } from \"@firebase/firestore\"\r\nimport { db } from \"../firebase/firebase\"\r\nimport { query, where } from \"firebase/firestore\"\r\nimport { NewInquery } from \"../components/home/NewInquery\"\r\nimport { Container, Typography } from \"@mui/material\"\r\nimport { UserAuthContext } from \"../auth/UserAuthProvider\"\r\nimport { ConfigButton } from \"../components/home/ConfigButton\"\r\n\r\n\r\nconst HomePage = memo(() =>{\r\n    const {isAdmin} = useContext(AdminFlagContext)\r\n    const {currentUser} = useContext(UserAuthContext)\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [inqueries,setInqueries] = useState<InqueryType[]>()\r\n    const [unmounted, setUnmounted] = useState(false)\r\n    const [response,setResponse] = useState<string[]>()\r\n    const [time,setTime]=useState<Timestamp>()\r\n\r\n    useEffect(()=>{\r\n        if(isAdmin!==undefined){\r\n            setLoading(false)\r\n        }\r\n    },[isAdmin])\r\n\r\n    useEffect(()=>{\r\n        if(unmounted===false){\r\n            (async()=>{\r\n                const ary:InqueryType[]=[]\r\n                const q= query(collection(db,\"inquery\"),where(\"response\",\"==\", \"未対応\"),limit(20))\r\n                const querySnapshot = await getDocs(q)\r\n                querySnapshot.forEach((doc)=>{\r\n                    ary.push({\r\n                        name:doc.data().name,\r\n                        email:doc.data().email,\r\n                        tel:doc.data().tel,\r\n                        products:doc.data().products,\r\n                        title:doc.data().title,\r\n                        inquery:doc.data().inquery,\r\n                        uid:doc.data().uid,\r\n                        timestamp:doc.data().timestamp,\r\n                        month: doc.data().month,\r\n                        response:doc.data().response,\r\n                        inqueryId: doc.id,\r\n                        staff:doc.data().staff\r\n                    })\r\n                })\r\n                setInqueries(ary)\r\n            })()\r\n        }\r\n        return () => { setUnmounted(true) }\r\n    },[inqueries,unmounted])\r\n    \r\n    useEffect(()=>{\r\n        if(unmounted===false){\r\n            (async()=>{\r\n                const resAry:string[] = []\r\n                const timeAry:Timestamp[]=[]\r\n                const q = query(collection(db,\"inquery\"),orderBy(\"timestamp\",\"asc\"))\r\n                // タイムスタンプが一番最新の一件だけを取得するように\r\n                const querySnapshot = await getDocs(q)\r\n                // onSnapshot(q,(querySnapshot)=>{\r\n                    querySnapshot.forEach(doc=>{\r\n                        resAry.push(doc.data().response)\r\n                        timeAry.push(doc.data().timestamp)\r\n                    })\r\n                    // 更新時点で最新のタイムスタンプ\r\n                    setTime(timeAry[timeAry.length-1])\r\n                    setResponse(resAry)\r\n                // })\r\n            })()\r\n        }\r\n        return () => { setUnmounted(true) }\r\n    },[unmounted])\r\n\r\n    return(\r\n        <>\r\n            {loading?\r\n                <Box mt={5}>\r\n                    <Loading />\r\n                </Box>\r\n                :\r\n                <>\r\n                    <Header />\r\n                    <Container\r\n                        maxWidth=\"xl\"\r\n                        sx={{pt:2}}\r\n                    >\r\n                        <Typography\r\n                            fontSize=\"18px\"\r\n                        >\r\n                            ようこそ、{currentUser?.displayName}さん\r\n                        </Typography>\r\n                    </Container>\r\n                    {!isAdmin?\r\n                        <>\r\n                            <InqueryForm setLoading={setLoading}/>\r\n                            <UserInquery/>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Container maxWidth=\"xl\">\r\n                                <Box \r\n                                    display=\"flex\"\r\n                                    alignItems=\"center\"\r\n                                    justifyContent=\"space-between\"\r\n                                >\r\n                                    <Info response={response}/>\r\n                                    <Box>\r\n                                        <NewInquery \r\n                                            time={time}\r\n                                            setInqueries={setInqueries}\r\n                                        />\r\n                                        {currentUser?.uid===\"WnXXiSFjlSgexnUOrXinoa3Cr052\"&&\r\n                                            <ConfigButton/>\r\n                                        }\r\n                                    </Box>\r\n                                </Box>\r\n                                <AllInquery \r\n                                    inqueries={inqueries}\r\n                                    setInqueries={setInqueries}\r\n                                    setUnmounted={setUnmounted}\r\n                                />\r\n                            </Container>\r\n                        </>\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n})\r\n\r\nexport default HomePage","import { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from \"@mui/material\"\r\nimport { Box, styled } from \"@mui/system\"\r\nimport { Timestamp } from \"firebase/firestore\"\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\ntype InqueryType ={\r\n    name:   string;\r\n    products: string;\r\n    title:  string;\r\n    detail: string;\r\n    timestamp: Timestamp;\r\n}\r\n\r\nconst CustomizedAccordion = styled(Accordion)({\r\n    '&.Mui-expanded':{\r\n        margin:0\r\n    }\r\n})\r\n\r\nexport const ChatDetail = (props:InqueryType) => {\r\n    const {name,products,title,detail,timestamp} = props\r\n    const date = timestamp.toDate().toLocaleDateString()\r\n    const time = timestamp.toDate().toLocaleTimeString()\r\n\r\n    return (\r\n        <CustomizedAccordion\r\n        sx={{\r\n            width:\"100%\",\r\n            backgroundColor:\"rgba(180,180,180,0.1)\",\r\n            // position:\"fixed\",\r\n            }}\r\n        >\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon color=\"primary\"/>}\r\n            >\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography\r\n                    color=\"GrayText\"\r\n                    >\r\n                        {name}様のお問い合わせ件名：\r\n                    </Typography>\r\n                    <Typography\r\n                    color=\"GrayText\"\r\n                    >\r\n                        {title}\r\n                    </Typography>\r\n                </Box>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                    <Grid container>\r\n                        <Grid item color=\"GrayText\">\r\n                            <Typography>\r\n                            日時：\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item color=\"GrayText\">\r\n                            <Typography>\r\n                            {date}　{time}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                        <Grid item color=\"GrayText\">\r\n                            <Typography>\r\n                            製品番号：\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item color=\"GrayText\">\r\n                            <Typography>\r\n                            {products}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                        <Grid item color=\"GrayText\">\r\n                            <Typography>\r\n                            詳細：\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item color=\"GrayText\">\r\n                            <Typography>\r\n                            {detail}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n            </AccordionDetails>\r\n\r\n        </CustomizedAccordion>\r\n    )\r\n}","import { IconButton, Menu, MenuItem, TextField } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport {  useContext, useState } from \"react\";\r\nimport { addDoc, collection, serverTimestamp } from \"@firebase/firestore\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport { UserAuthContext } from \"../../auth/UserAuthProvider\";\r\nimport { AdminFlagContext } from \"../../auth/AdminFlagProvider\";\r\n\r\ntype PropsType ={\r\n    id:string\r\n    name:string\r\n    staff:string\r\n}\r\n\r\nexport const ChatInput =(props:PropsType) =>{\r\n    const [message,setMessage] = useState(\"\")\r\n    const {id,staff}= props\r\n    const {currentUser} = useContext(UserAuthContext)\r\n    const {isAdmin} = useContext(AdminFlagContext)\r\n\r\n    const sendMessage =async()=>{\r\n        message!==\"\"&&\r\n        await addDoc(collection(db,\"inquery\", id, \"chat\"),{\r\n            message,\r\n            name:currentUser?.displayName,\r\n            timestamp:serverTimestamp()\r\n        })\r\n        setMessage(\"\")\r\n    }\r\n\r\n    return(\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                sx={{\r\n                    position:\"fixed\",\r\n                    bottom:0,\r\n                    padding:2,\r\n                    boxShadow:\"0 -5px 10px rgba(150,150,150,0.1)\",\r\n                    backgroundColor:\"white\",\r\n                    width:\"100%\",\r\n                }}\r\n            >\r\n                    <Box \r\n                        sx={{width:\"80%\",mr:2}}\r\n                    >\r\n                        <TextField \r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            value={message}\r\n                            size=\"small\"\r\n                            type=\"text\"\r\n                            {...staff!==currentUser?.displayName&&\r\n                                {disabled:true}\r\n                            }\r\n                            {...!isAdmin&&{disabled:false}}\r\n                            onChange={e=>e.target.value.length<=4000&&setMessage(e.target.value)}\r\n                            />\r\n                    </Box>\r\n                    <Box\r\n                        sx={{mr:2}}\r\n                        display=\"flex\"\r\n                    >\r\n                        <IconButton\r\n                            size=\"large\" \r\n                            color=\"primary\"\r\n                            {...staff!==currentUser?.displayName&&\r\n                                {disabled:true}\r\n                            }\r\n                            {...!isAdmin&&{disabled:false}}\r\n                            onClick={sendMessage}\r\n                        >\r\n                            <AddPhotoAlternateIcon/>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            size=\"large\" \r\n                            color=\"primary\"\r\n                            {...staff!==currentUser?.displayName&&\r\n                                {disabled:true}\r\n                            }\r\n                            {...!isAdmin&&{disabled:false}}\r\n                            onClick={sendMessage}\r\n                        >\r\n                            <SendIcon/>\r\n                        </IconButton>\r\n                    </Box>\r\n            </Box>\r\n    )\r\n}","import { Button } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { useContext } from \"react\"\r\nimport { AdminFlagContext } from \"../../auth/AdminFlagProvider\"\r\n\r\nexport const Evaluation = () => {\r\n    // const solve = false\r\n    const {isAdmin} = useContext(AdminFlagContext)\r\n    console.log(isAdmin)\r\n\r\n    \r\n    return(\r\n        <Box\r\n            textAlign=\"right\"\r\n        >\r\n            <Button >解決していません</Button>\r\n            <Button>解決しました</Button>\r\n        </Box>\r\n    )\r\n}","import { collection, onSnapshot, orderBy, query, Timestamp } from \"@firebase/firestore\"\r\nimport { Button, Card, CardContent, Container, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { memo, useEffect, useState } from \"react\"\r\nimport { db } from \"../../firebase/firebase\"\r\nimport { Loading } from \"../util/Loading\"\r\nimport { Evaluation } from \"./Evaluation\"\r\n\r\ntype PropsType = {\r\n    id:string\r\n}\r\ntype MessageType = {\r\n    message: string\r\n    name: string\r\n    timestamp:Timestamp\r\n}\r\n\r\nexport const ChatOutput =memo((props:PropsType)=>{\r\n    const {id} = props\r\n    const [chat,setChat] = useState<MessageType[]>()\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            const inqueryRef = collection(db,\"inquery\",id,\"chat\")\r\n            const q = query(inqueryRef, orderBy(\"timestamp\",\"asc\"))\r\n            onSnapshot(q,(querySnapshot)=>{\r\n                const ary:MessageType[] = []\r\n                querySnapshot.forEach((doc)=>{\r\n                    ary.push({\r\n                        message: doc.data().message,\r\n                        name:doc.data().name,\r\n                        timestamp:doc.data({serverTimestamps:\"estimate\"}).timestamp\r\n                    })\r\n                })\r\n                setChat(ary)\r\n            })\r\n        })()\r\n    },[id])\r\n\r\n    useEffect(()=>{\r\n        (()=>{\r\n            setLoading(true)\r\n            if(chat!==undefined){\r\n                setLoading(false)\r\n            }\r\n        })()\r\n    },[chat])\r\n\r\n    \r\n    return(\r\n        <Container\r\n            sx={{\r\n                mt:2,\r\n                mb:11,\r\n            }}\r\n        >\r\n            {\r\n                loading?\r\n                    <Loading/>\r\n                :\r\n                <>\r\n                    {chat!==undefined&&\r\n                        chat.map((i,index)=>{\r\n                            return(\r\n                                <Box\r\n                                    key={index}\r\n                                    sx={{mb:2}}\r\n                                >\r\n                                    <Box>\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            color=\"GrayText\"\r\n                                            sx={{mr:1}}\r\n                                        >\r\n                                            {i.name}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    <Box \r\n                                        sx={{width:\"100%\"}}\r\n                                        mt={1}\r\n                                    >\r\n                                        <Card>\r\n                                            <CardContent>\r\n                                                <Typography\r\n                                                    sx={{whiteSpace:\"pre\"}}\r\n                                                >\r\n                                                    {i.message}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                        <Box color=\"GrayText\" sx={{textAlign:\"right\"}}>\r\n                                            <Typography component=\"span\" sx={{mr:2}}>\r\n                                                {String(i.timestamp.toDate().toLocaleDateString())}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Evaluation/>\r\n                                </Box>\r\n                            )\r\n                        })\r\n                    }\r\n                </>\r\n            }\r\n\r\n        </Container>\r\n    )\r\n})","import { doc, getDoc, Timestamp } from \"@firebase/firestore\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { useLocation } from \"react-router\"\r\nimport { UserAuthContext } from \"../auth/UserAuthProvider\"\r\nimport { ChatDetail } from \"../components/chat/ChatDetail\"\r\nimport { ChatInput } from \"../components/chat/ChatInput\"\r\nimport { ChatOutput } from \"../components/chat/ChatOutput\"\r\nimport { Header } from \"../components/util/Header\"\r\nimport { db } from \"../firebase/firebase\"\r\n\r\ntype InqueryType ={\r\n    name:   string;\r\n    products: string;\r\n    title:  string;\r\n    detail: string;\r\n    timestamp: Timestamp;\r\n    response: string;\r\n    staff:string\r\n}\r\n\r\nexport const ChatPage =()=>{\r\n    const {currentUser} = useContext(UserAuthContext)\r\n    const location = useLocation()\r\n    const id = String(location.state)\r\n    const [inquery, setInquery] = useState<InqueryType>()\r\n\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            const docRef = doc(db, \"inquery\", id)\r\n            const docSnap = await getDoc(docRef)\r\n            if(docSnap.exists()){\r\n                setInquery({\r\n                    name: docSnap.data().name,\r\n                    products: docSnap.data().products,\r\n                    title: docSnap.data().title,\r\n                    detail: docSnap.data().inquery,\r\n                    timestamp: docSnap.data().timestamp,\r\n                    response: docSnap.data().response,\r\n                    staff: docSnap.data().staff\r\n                })\r\n            }\r\n        })()\r\n    },[currentUser,id])\r\n\r\n    return(\r\n        <>\r\n            <Header/>\r\n            {\r\n                inquery!==undefined&&\r\n                <>\r\n                    <ChatDetail \r\n                        name={inquery.name} \r\n                        products={inquery.products}\r\n                        title={inquery.title}\r\n                        detail={inquery.detail}\r\n                        timestamp={inquery.timestamp}\r\n                    />\r\n                    <ChatOutput\r\n                        id={id}\r\n                    />\r\n                    <ChatInput \r\n                        id={id}\r\n                        name={inquery?.name} \r\n                        staff={inquery?.staff}\r\n                    />\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}","import { doc, updateDoc } from \"@firebase/firestore\"\r\nimport { List, ListItem, ListItemButton, ListSubheader, Typography } from \"@mui/material\"\r\nimport { db } from \"../../firebase/firebase\"\r\nimport { UserType } from \"../../types/type\"\r\n\r\ntype PropsType ={\r\n    users: UserType[]|undefined\r\n    listName:string\r\n    fetchUsers: () => Promise<void>\r\n    setUsers: React.Dispatch<React.SetStateAction<UserType[] | undefined>>\r\n    setNotification: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport const UserList =(props:PropsType)=>{\r\n    const {users,listName,fetchUsers,setUsers,setNotification} = props\r\n\r\n    const changeAdmin = async(id:string,admin:boolean) =>{\r\n        const docRef = doc(db,\"users\",id)\r\n        await updateDoc(docRef,{\r\n            admin:!admin\r\n        })\r\n        fetchUsers()\r\n        setUsers(undefined)\r\n        setNotification(true)\r\n    }\r\n    \r\n    return(\r\n        <List \r\n            sx={{\r\n                border:\"1px solid #1976d2\",\r\n            }}\r\n        >\r\n            <ListSubheader>\r\n                {listName}\r\n            </ListSubheader>\r\n                <>\r\n                    {users!==undefined&&\r\n                        users.map((i,key)=>{\r\n                            return(\r\n                                <ListItem key={key}>\r\n                                    <ListItemButton \r\n                                        sx={{\r\n                                            borderBottom:\"1px solid #1976d2\",\r\n                                        }}\r\n                                        onClick={()=>changeAdmin(i.uid,i.admin)}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"GrayText\"\r\n                                            fontSize=\"16px\"\r\n                                            sx={{mr:2}}\r\n                                        >\r\n                                            {i.name}\r\n                                        </Typography>   \r\n                                        <Typography\r\n                                            color=\"GrayText\"\r\n                                            fontSize=\"12px\"\r\n                                        >\r\n                                            メールアドレス：{i.email}\r\n                                        </Typography>   \r\n                                    </ListItemButton>\r\n                                </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </>\r\n        </List>\r\n    )\r\n}","import { Backdrop, Button, Fade, IconButton, TextField, Typography } from \"@mui/material\"\r\nimport { Box, styled } from \"@mui/system\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { collection, deleteDoc, doc, getDocs, query, setDoc, where } from \"@firebase/firestore\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport { ProductType, UserType } from \"../../types/type\"\r\nimport { UserList } from \"./UserList\";\r\n\r\ntype propsType = {\r\n    open:boolean\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n    func: () => Promise<void>\r\n    title: string\r\n    list: UserType[] | ProductType[] | undefined\r\n}\r\n\r\nexport const ManageItems =(props:propsType)=>{\r\n    const { open,setOpen,func,title,list } = props\r\n    const inputE1 = useRef<HTMLInputElement>(null)\r\n    const [users,setUsers] = useState<UserType[]>()\r\n    const [notification,setNotification] = useState<boolean>(false)\r\n\r\n    const CustomIcon = styled(CloseIcon)({\r\n        display: \"block\",\r\n        marginRight: 0,\r\n        marginLeft:\"auto\"\r\n    })\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const searchUser = async()=>{\r\n        if(inputE1.current!==null&&inputE1.current.value!==\"\"){\r\n            const ary:UserType[] = []\r\n            const q = query(collection(db,\"users\"),where(\"name\",\"==\",inputE1.current.value))\r\n            const querySnapshot = await getDocs(q)\r\n            querySnapshot.forEach((doc)=>{\r\n                ary.push({\r\n                    name:doc.data().name,\r\n                    email:doc.data().email,\r\n                    uid:doc.data().uid,\r\n                    admin:doc.data().admin\r\n                })\r\n            })\r\n            inputE1.current.value=\"\"\r\n            setUsers(ary)\r\n        }\r\n    }\r\n\r\n    const addProduct = async() => {\r\n        if(inputE1.current!==null&&inputE1.current.value!==\"\"&&list!==undefined){\r\n            const boolAry:boolean[] = []\r\n            const path = doc(collection(db,\"products\"))\r\n            list.forEach(i=>{\r\n                boolAry.push(i.name===inputE1.current?.value)\r\n            })\r\n            if(boolAry.includes(true)){\r\n                const q = query(collection(db,\"products\"),where(\"name\",\"==\",inputE1.current.value))\r\n                const querySnapshot = await getDocs(q)\r\n                querySnapshot.forEach(v=>\r\n                    deleteDoc(doc(db,\"products\", v.data().id))\r\n                )\r\n            }else{\r\n                await setDoc(doc(db,\"products\",path.id),{\r\n                    id: path.id,\r\n                    name: inputE1.current.value\r\n                })   \r\n            }\r\n            func()\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setNotification(false)\r\n        },1000)\r\n    },[notification])\r\n\r\n    return(\r\n        <Backdrop\r\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={open}\r\n        >\r\n            <Box\r\n                sx={{backgroundColor:\"#ffffff\"}}\r\n                p={4}\r\n                width=\"80%\"\r\n            >\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"space-between\"\r\n                >\r\n                    <Typography\r\n                        color=\"GrayText\"\r\n                    >\r\n                        {title}名を入力\r\n                    </Typography>\r\n                    <IconButton\r\n                        onClick={handleClose}\r\n                    >\r\n                        <CustomIcon \r\n                            color=\"action\" \r\n                        />\r\n                    </IconButton>\r\n                </Box>\r\n                <Typography\r\n                    color=\"GrayText\"\r\n                    fontSize=\"14px\"\r\n                >\r\n                    {title===\"スタッフ\"?\r\n                        `入力欄に${title}名を入力後、${title}リストに表示された名前をクリックすると追加と削除が行えます。`\r\n                    :\r\n                        `入力欄に${title}名を入力後、実行をクリックすると追加と削除が行えます。`\r\n                    }\r\n                    \r\n                </Typography>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"flex-end\"\r\n                    mt={2}\r\n                    mb={2}\r\n                >\r\n                    <TextField \r\n                        type=\"text\"\r\n                        variant=\"outlined\" \r\n                        label={title+\"名\"}\r\n                        sx={{width:\"50%\"}}\r\n                        inputRef={inputE1}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"medium\"\r\n                        sx={{ml:2,width:\"10%\"}}\r\n                        onClick={title===\"スタッフ\" ? searchUser : addProduct}\r\n                    >\r\n                        {title===\"スタッフ\"?\r\n                            \"検索\"\r\n                        :\r\n                            \"実行\"\r\n                        }\r\n                    </Button>\r\n                </Box>\r\n                <Fade in={notification}>\r\n                    <Typography\r\n                        color=\"GrayText\"\r\n                        textAlign=\"center\"\r\n                    >\r\n                        正常に実行されました。\r\n                    </Typography>\r\n                </Fade>\r\n                {title===\"スタッフ\"&&\r\n                    <UserList\r\n                        users={users}\r\n                        listName={title+\"リスト\"}\r\n                        fetchUsers={func}\r\n                        setUsers={setUsers}\r\n                        setNotification={setNotification}\r\n                    />\r\n                }\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}","import { Box, Button, List, ListItem, ListSubheader, Typography } from \"@mui/material\"\r\nimport { useState } from \"react\"\r\nimport { ProductType, UserType } from \"../../types/type\"\r\nimport { ManageItems } from \"./ManageItems\"\r\n\r\ntype propsType = {\r\n    func: () => Promise<void>\r\n    list: UserType[] | ProductType[] | undefined\r\n    title: string\r\n}\r\n\r\nexport const ConfigList = (props:propsType) => {\r\n    const {func,list,title} = props\r\n    const [open, setOpen] = useState<boolean>(false)\r\n    \r\n    const handleToggle = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    return (\r\n        <Box mb={3}>\r\n            <Box \r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                m={2}\r\n            >\r\n                <Typography\r\n                    component=\"h1\"\r\n                    fontSize=\"23px\"\r\n                    color=\"GrayText\"\r\n                >\r\n                    {title}管理\r\n                </Typography>\r\n                <Button \r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    onClick={handleToggle}\r\n                >\r\n                    {title}の追加と削除\r\n                </Button>\r\n                <ManageItems \r\n                    open={open} \r\n                    setOpen={setOpen}\r\n                    func={func}\r\n                    title={title}\r\n                    list={list}\r\n                />\r\n            </Box>\r\n            <List \r\n                sx={{\r\n                    border:\"1px solid #1976d2\",\r\n                    p:2\r\n                }}\r\n            >\r\n                <ListSubheader>\r\n                    {title}リスト\r\n                </ListSubheader>\r\n                {list!==undefined&&\r\n                    list.map((i,key)=>{\r\n                        return(\r\n                                <ListItem \r\n                                    key={key}\r\n                                    sx={{borderBottom:\"1px solid #1976d2\"}}\r\n                                >\r\n                                        <Typography\r\n                                            color=\"black\"\r\n                                            sx={{mr:2}}\r\n                                            fontSize=\"16px\"\r\n                                        >\r\n                                            {i.name}\r\n                                        </Typography>\r\n                                </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n        </Box>\r\n    )\r\n}\r\n\r\n","import { Tab, Tabs } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\n\r\ntype propsType = {\r\n    value:number\r\n    setValue: React.Dispatch<React.SetStateAction<number>>\r\n}\r\n\r\nexport const ConfigTab = (props:propsType) => {\r\n    const {value,setValue} = props\r\n    \r\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n    \r\n    return (\r\n        <Box\r\n            height=\"100%\"\r\n            position=\"fixed\"\r\n            sx={{\r\n                backgroundColor:\"aliceblue\",\r\n            }}\r\n        >\r\n            <Tabs \r\n                value={value}\r\n                orientation=\"vertical\"\r\n                onChange={handleChange}\r\n            >\r\n\r\n                <Tab label=\"お問い合わせ情報\"/>\r\n                <Tab label=\"スタッフ管理\"/>\r\n                <Tab label=\"製品管理\"/>\r\n            </Tabs>\r\n        </Box>\r\n    )\r\n}","import { collection, getDocs, query, where } from \"@firebase/firestore\"\r\nimport { IconButton, TextField, ToggleButton, ToggleButtonGroup, Typography } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport {  FormEvent, useEffect, useReducer, useRef, useState } from \"react\"\r\nimport { InqueryType } from \"../../types/type\"\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { db } from \"../../firebase/firebase\"\r\n\r\ntype ActionType = {\r\n    type: \"PREV\" | \"NEXT\" | \"SEARCH\"\r\n}\r\n\r\nexport const InqueryInfo =()=>{\r\n    const now = (new Date()).getMonth()+1\r\n    const [inqueries,setInqueries] = useState<InqueryType[]>()\r\n    const inputE1 = useRef<HTMLInputElement>(null)\r\n    \r\n    const reducerFunc = (countState: number,action:ActionType) => {\r\n        switch(action.type){\r\n            case \"PREV\":\r\n                if(countState > 1){\r\n                    return countState - 1\r\n                }else if(countState === 1){\r\n                    return countState = 12\r\n                }\r\n                return countState\r\n            case \"NEXT\":\r\n                if(countState < 12){\r\n                    return countState + 1\r\n                }else if(countState === 12){\r\n                    return countState = 1\r\n                }\r\n                return countState\r\n            case \"SEARCH\":\r\n                if(inputE1.current?.value!==undefined){\r\n                    if(Number(inputE1.current?.value) <= 0 || Number(inputE1.current?.value) > 12){\r\n                        alert(\"1~12で入力してください。\")\r\n                        inputE1.current.value = \"\"\r\n                        return countState\r\n                    }else{\r\n                        return countState = Number(inputE1.current?.value)\r\n                    }\r\n                }\r\n                return countState         \r\n            default:\r\n                return countState\r\n        }\r\n    }\r\n    const [date, dispatch] = useReducer(reducerFunc,now)\r\n\r\n    const fetchInquery = async() => {\r\n        const ary:InqueryType[] = []\r\n        const q = query(collection(db,\"inquery\"),where(\"month\", \"==\", date))\r\n        const querySnapshot = await getDocs(q)\r\n        querySnapshot.forEach((doc)=>{\r\n            ary.push({\r\n                name: doc.data().name,\r\n                email: doc.data().email,\r\n                tel: doc.data().tel,\r\n                products: doc.data().products,\r\n                title: doc.data().title,\r\n                inquery: doc.data().inquery,\r\n                uid: doc.data().uid,\r\n                timestamp: doc.data().timestamp,\r\n                month: doc.data().month,\r\n                response: doc.data().response,\r\n                inqueryId: doc.data().inqueryId,\r\n                staff: doc.data().staff,\r\n            })\r\n        })\r\n        setInqueries(ary)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        fetchInquery()\r\n    },[date])\r\n\r\n    return(\r\n        \r\n        <Box\r\n            mb={3}\r\n        >\r\n            <Box\r\n                m={2}\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n            >\r\n                <Typography\r\n                    component=\"h1\"\r\n                    fontSize=\"23px\"\r\n                    color=\"GrayText\"\r\n                >\r\n                    {date}月のお問い合わせ情報\r\n                </Typography>\r\n                <ToggleButtonGroup>\r\n                    <ToggleButton value=\"prev\" onClick={()=>dispatch({type: \"PREV\"})}>先月</ToggleButton>\r\n                    <ToggleButton value=\"next\" onClick={()=>dispatch({type: \"NEXT\"})}>翌月</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Box\r\n                    component=\"form\"\r\n                    display=\"flex\"\r\n                    alignItems=\"flex-end\"\r\n                    onSubmit={(e:FormEvent)=>{\r\n                        e.preventDefault() \r\n                        dispatch({type: \"SEARCH\"})\r\n                    }}\r\n                    >\r\n                    <TextField \r\n                        label=\"検索したい月の数字\"\r\n                        type=\"number\"\r\n                        inputProps={{inputMode:\"numeric\",pattern:'[0-9]*'}}\r\n                        variant=\"standard\"\r\n                        inputRef={inputE1}\r\n                        ></TextField>\r\n                    <IconButton\r\n                        onClick={()=>dispatch({type: \"SEARCH\"})}\r\n                    >\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n            <Box>\r\n                <Typography>{inqueries?.length}件</Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import { collection, getDocs, orderBy, query } from \"@firebase/firestore\"\r\nimport { Box, Grid } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { Header } from \"../components/util/Header\"\r\nimport { db } from \"../firebase/firebase\"\r\nimport { ProductType, UserType } from \"../types/type\"\r\nimport { Loading } from \"../components/util/Loading\"\r\nimport { ConfigList } from \"../components/adminConfig/ConfigList\"\r\nimport { ConfigTab } from \"../components/adminConfig/ConfigTab\"\r\nimport { InqueryInfo } from \"../components/adminConfig/InqueryInfo\"\r\n\r\nexport const AdminConfigPage =() =>{\r\n    const [users,setUsers] = useState<UserType[]>()\r\n    const [staff,setStaff] = useState<UserType[]>()\r\n    const [loading,setLoading] = useState<boolean>(true)\r\n    const [value,setValue] = useState(0)\r\n    const [products,setProducts] = useState<ProductType[]>([])\r\n\r\n    const fetchUsers = async()=>{\r\n        const userAry:UserType[]=[]\r\n        const staffAry:UserType[]=[]\r\n        const q = collection(db,\"users\")\r\n        const querySnapshot = await getDocs(q)\r\n            querySnapshot.forEach((doc)=>{\r\n                if(doc.data().admin === false){\r\n                    userAry.push({\r\n                        name:doc.data().name,\r\n                        email:doc.data().email,\r\n                        admin:doc.data().admin,\r\n                        uid:doc.data().uid\r\n                    })\r\n                }else{\r\n                    staffAry.push({\r\n                        name:doc.data().name,\r\n                        email:doc.data().email,\r\n                        admin:doc.data().admin,\r\n                        uid:doc.data().uid\r\n                    })\r\n                }\r\n            })\r\n            setUsers(userAry)\r\n            setStaff(staffAry)\r\n    }\r\n\r\n    const fetchProducts = async() => {\r\n        const productsRef = collection(db, \"products\")\r\n        const q = query(productsRef, orderBy(\"name\"))\r\n        const querySnapshot = await getDocs(q)\r\n        const array:ProductType[] = []\r\n        querySnapshot.forEach((doc) => {\r\n            array.push({\r\n                id: doc.data().id,\r\n                name: doc.data().name\r\n            })\r\n        });\r\n        setProducts(array)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers()\r\n        fetchProducts()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(users!==undefined||staff!==undefined){\r\n            setLoading(false)\r\n        }\r\n    },[users,staff])\r\n\r\n    return(\r\n        <>\r\n            <Header />\r\n            <Grid\r\n                container\r\n            >\r\n                <Grid item xs={2}>\r\n                    <ConfigTab value={value} setValue={setValue}/>\r\n                </Grid>\r\n                \r\n                <Grid item xs={9}>\r\n                    {loading?\r\n\r\n                        <Box mt={5}>\r\n                            <Loading/>\r\n                        </Box>\r\n                        :\r\n                        <>\r\n                            {value===0&&\r\n                                <InqueryInfo/>    \r\n                            }\r\n                            {value===1&&\r\n                                <ConfigList\r\n                                    func={fetchUsers}\r\n                                    list={staff}\r\n                                    title={\"スタッフ\"}\r\n                                />\r\n                                }\r\n                            {value===2&&\r\n                                <ConfigList\r\n                                    func={fetchProducts}\r\n                                    list={products}\r\n                                    title={\"製品\"}\r\n                                /> \r\n                            }\r\n                        </>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { BrowserRouter, Route, Switch } from \"react-router-dom\"\r\nimport SignIn from \"../auth/SignIn\"\r\nimport SignUp from \"../auth/SignUp\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { UserAuthContext } from \"../auth/UserAuthProvider\"\r\nimport HomePage from \"../pages/HomePage\"\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\"\r\nimport { db } from \"../firebase/firebase\"\r\nimport { ChatPage } from \"../pages/ChatPage\"\r\nimport { AdminConfigPage } from \"../pages/AdminConfigPage\"\r\n\r\nconst AppRouter = () =>{\r\n    const {currentUser} = useContext(UserAuthContext)\r\n    const [inqueryId, setInqueryId] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(currentUser){\r\n                const q = query(collection(db,\"inquery\"),where(\"uid\", \"==\", currentUser.uid))\r\n                const querySnapshot = await getDocs(q)\r\n                querySnapshot.forEach((doc)=>{\r\n                    setInqueryId(doc.id)\r\n                })\r\n            }\r\n        })()\r\n    },[])\r\n\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={SignIn}/>\r\n                <Route exact path=\"/signup\" component={SignUp}/>\r\n                <Route exact path={`/home/${currentUser?.uid}`} component={HomePage}/>\r\n                <Route exact path={`/admin/${currentUser?.uid}`} component={HomePage}/>\r\n                <Route path={`/inquery/${inqueryId}`} component={ChatPage}/>\r\n                <Route exact path={'/admin/WnXXiSFjlSgexnUOrXinoa3Cr052/config'} component={AdminConfigPage}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import { AdminFlagProvider } from \"./auth/AdminFlagProvider\";\r\nimport { UserAuthProvider } from \"./auth/UserAuthProvider\";\r\nimport AppRouter from \"./Router/AppRouter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <UserAuthProvider>\r\n      <AdminFlagProvider>\r\n        <AppRouter />\r\n      </AdminFlagProvider>\r\n    </UserAuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}